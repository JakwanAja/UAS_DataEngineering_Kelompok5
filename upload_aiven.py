# -*- coding: utf-8 -*-
"""Upload_Aiven.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jKPpSQ2nX92oBrWk4kKA3XQK-qL4SeYv
"""

from sqlalchemy import create_engine, text

# Ganti sesuai kredensial dari Aiven Console
username = "avnadmin"
password = "AVNS_4E4-XxEuZ6IxSQJHei3"
host = "dataengineer5-nabilacarrissa.f.aivencloud.com"
port = 26514
dbname = "defaultdb"

# Buat koneksi URL
url_koneksi = f"postgresql://{username}:{password}@{host}:{port}/{dbname}?sslmode=require"

# Tes koneksi
try:
    engine = create_engine(url_koneksi)
    with engine.connect() as conn:
        result = conn.execute(text("SELECT version();"))
        for row in result:
            print("Koneksi berhasil ke Aiven PostgreSQL!")
            print("Versi PostgreSQL:", row[0])
except Exception as e:
    print("Gagal konek ke PostgreSQL Aiven:")
    print(e)

import pandas as pd
from sqlalchemy import create_engine, text

username = "avnadmin"
password = "AVNS_4E4-XxEuZ6IxSQJHei3"
host = "dataengineer5-nabilacarrissa.f.aivencloud.com"
port = 26514
dbname = "defaultdb"

url_koneksi = f"postgresql://{username}:{password}@{host}:{port}/{dbname}?sslmode=require"
engine = create_engine(url_koneksi)

baca_csv = pd.read_csv("/content/data_final_ntb (1).csv")

with engine.connect() as koneksi:
    baca_csv.to_sql("Quantity", koneksi, if_exists="replace", index=False)
    print("CSV berhasil di-upload ke tabel 'Quantity'.")

with engine.connect() as koneksi:
    hasil = pd.read_sql('SELECT COUNT(*) AS total FROM "Quantity"', koneksi)
    print(f"Jumlah baris di tabel Quantity: {hasil['total'][0]}")

    preview = pd.read_sql('SELECT * FROM "Quantity" LIMIT 5', koneksi)
    print("Data awal:")
    display(preview)

#install pycaret
!pip install pycaret --quiet

from pycaret.regression import *

# Pastikan hanya kolom numerik yang dipakai
kolom_model = ['7 - 12 Tahun', '13 - 15 Tahun', '16 - 18 Tahun',
               'Persentase_Penduduk_Miskin', 'Persentase_Tingkat_Pengangguran', 'Besaran_Upah']

data_regresi = baca_csv[kolom_model].copy()

# Ubah ke numerik kalau ada yang string
for kolom in kolom_model:
    data_regresi[kolom] = pd.to_numeric(data_regresi[kolom], errors='coerce')

# Setup PyCaret untuk regresi (target: Upah)
s = setup(data=data_regresi, target='Besaran_Upah', session_id=123, verbose=False)

# Bandingkan semua model regresi
best_model = compare_models()

from pycaret.regression import *

# Siapkan fitur pendidikan
fitur_pendidikan = ['7 - 12 Tahun', '13 - 15 Tahun', '16 - 18 Tahun']
df_pendidikan = baca_csv[fitur_pendidikan + ['Persentase_Penduduk_Miskin', 'Persentase_Tingkat_Pengangguran', 'Besaran_Upah']].dropna()

# Regresi 1: Kemiskinan
setup(df_pendidikan, target='Persentase_Penduduk_Miskin', session_id=1, verbose=False)
model_miskin = compare_models()

# Regresi 2: Pengangguran
setup(df_pendidikan, target='Persentase_Tingkat_Pengangguran', session_id=2, verbose=False)
model_pengangguran = compare_models()

# Regresi 3: Upah
setup(df_pendidikan, target='Besaran_Upah', session_id=3, verbose=False)
model_upah = compare_models()

kolom_korelasi = ['7 - 12 Tahun', '13 - 15 Tahun', '16 - 18 Tahun', 'Persentase_Penduduk_Miskin', 'Persentase_Tingkat_Pengangguran', 'Besaran_Upah']

print("Columns in baca_csv:", baca_csv.columns)

df_korelasi = baca_csv[kolom_korelasi].copy()

for kolom in kolom_korelasi:
    df_korelasi[kolom] = pd.to_numeric(df_korelasi[kolom], errors='coerce')

# Hitung korelasi
hasil_korelasi = df_korelasi.corr()

# Tampilkan tabel
print(hasil_korelasi)

# Tampilkan heatmap
import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(10, 6))
sns.heatmap(hasil_korelasi, annot=True, cmap='coolwarm', fmt=".2f")
plt.title("Korelasi antar Variabel Pendidikan dan Sosial Ekonomi")
plt.show()

import matplotlib.pyplot as plt
import seaborn as sns

sns.histplot(baca_csv['jumlah'])
plt.title("Distribusi Jumlah")
plt.show()

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

X = baca_csv[['fitur1', 'fitur2']]
y = baca_csv['target']
model = LinearRegression().fit(X, y)

baca_csv = pd.read_csv("/content/data_final_ntb (1).csv")
baca_csv